/**
 * @package Live
 */

/*
 * Html
 */
html {

	font-size: 90%;
	height: 100%;
	overflow-x: hidden;

	@include breakpoint(medium) {
		font-size: 95%;
	}

	@include breakpoint(regular) {
		font-size: 100%;
	}

}

/*
 * Body
 */
body {

	@include font(primary, rem(16) 2em);

	background: $body-background top center fixed no-repeat;
	background-size: ($body-background-width / $default-site-width) * 100%;
	color: $text-color;
	height: 100%;

	@include breakpoint($default-site-width-name) {
		background-size: auto;
	}

	@each $name, $width in $site-widths {
		&.site-width-#{$name} {
			background-size: ($body-background-width / $width) * 100%;
			@include breakpoint($name) {
				background-size: auto;
			}
		}
	}

	// Blur effect
	&.background-blur:before {

		$radius: 26px;

		@include position(fixed, -$radius*2);
		@include filter(blur($radius));
		@include force3d;

		content: "";
		background: inherit;
		background-attachment: scroll;
		filter: blur($radius);
		display: block;
		z-index: -1;

	}

	// Dots pattern
	&.background-dots:after {

		@include position(fixed, 0);

		content: "";
		background: url("../res/pattern-dots.png") 0 0 / 3px 3px repeat;
		background-attachment: inherit;
		opacity: 0.7;
		z-index: -1;

		@include hidpi {
			background-image: url("../res/pattern-dots@2x.png");
		}

	}

	// Parallax effect
	> .background-parallax {

		@include position(fixed, 0 null null 0);
		@include size(100% 300%);
		@include size(100vw 300vh);
		@include transform(translate3d(0, 0, 0));

		background: {
			position: inherit;
			repeat: inherit;
			size: inherit;
			attachment: scroll !important;
		}
		z-index: -1;

	}

}

/*
 * Paragraph
 */
p {
	@include common-text;
}

/*
 * Link
 */
a {

	outline: none;
	transition: color 0.1s;
	color: $link-color;
	text-decoration: none;

	&:hover {
		text-decoration: underline;
	}

}

/*
 * Horizontal line
 */
hr {

	@include common-block;

	border: none;
	border-top: 1px solid $line-color;
	clear: both;

}

/*
 * Small
 */
small {
	font-size: rem(11);
	line-height: 1.3em;
	color: $small-color;
	text-transform: uppercase;
}

/*
 * Strong
 */
strong {
	font-weight: bold;
}

/*
 * Em
 */
em {
	font-style: italic;
}

/*
 * Sub, sup
 */
sub, sup {
	font-size: 0.8em;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/*
 * Mark
 */
mark {
	border-radius: rem(2);
	background: $mark-background;
	color: $mark-color;
	padding: 0 0.2em;
}

/*
 * Headlines
 */
h1, h2, h3, h4, h5, h6 {

	@include font(secondary);

	color: $headline-color;
	line-height: 1.4em;
	text-align: center;
	margin: 2em 0 1em;

	a {
		@include link-reverse;
	}

	img {
		@include margin(0 null);
	}

}

@each $h, $font-size in (h1: 32, h2: 26, h3: 20, h4: 20, h5: 18, h6: 18) {
	#{$h} {
		font-size: rem($font-size);
	}
}

/*
 * Quote
 */
q {
	font: {
		family: Georgia, Serif;
		style: italic;
	}
}

blockquote {

	@extend q;
	@include common-text;
	@include margin(null 1.5em);

	font-size: rem(22);
	line-height: 1.6em;

}

/*
 * Address
 */
address {

	@include common-text;

	font-style: italic;

}

/*
 * Image
 */
figure, img {

	@include common-block;

	max-width: 100%;
	height: auto;

	&.align-left {

		width: 100%;

		@include breakpoint(medium) {
			margin: 0.5em 5% 1.5em 0;
			width: auto;
		}

	}

	&.align-right {

		width: 100%;

		@include breakpoint(medium) {
			margin: 0.5em 0 1.5em 5%;
			width: auto;
		}

	}

	&.align-center,
	&.width-full {
		display: block;
	}

	@include in-columns {

		&:first-child {
			margin-top: 0.5em;
		}

	}

}

figure {

	@include break-inside(avoid);

	img {
		margin: 0;
		width: 100%;
	}

}

img {
	vertical-align: middle;
}

figcaption {

	@extend %caption;
	@include font-extend(secondary);

	margin-top: 1em;

}

/*
 * List
 */
ul, ol {

	@include common-text;

	list-style: disc outside;
	padding-left: 1.25em;

}

ol {
	list-style-type: decimal;
}

li {

	padding-left: 0.7em;

	&, ul, ol {
		margin: 0.4em 0;
	}

}

/*
 * Navigation
 */
%nav-list {

	@include font(secondary, rem(16) 1.4em);

	list-style: none;
	color: $nav-color;
	padding-left: 0;

	li {
		border-bottom: 1px solid $nav-line-color;
		margin: 0;
		padding-left: 0;
	}

	a {

		transition: padding 0.2s, color 0.2s;
		color: inherit;
		display: inline-block;
		position: relative;
		padding: 0.75em 0.6em 0.75em 0;

		&[href="#"] {
			cursor: default;
		}

		&:empty:after {
			content: "-";
			visibility: hidden;
		}

		&:before {
			transition: color 0.2s, opacity 0.5s, left 0.5s;
			content: "\0203a";
			color: $nav-color;
			line-height: 0;
			pointer-events: none;
			opacity: 0;
			position: absolute;
			margin: -0.125em 0 0 0;
			top: 0.75em + 1.4em/2;
			left: -0.6em;
		}

		@at-root #{selector-replace(&, "a", ".current > a")}, &:hover {

			@include padding(null 0 null 0.6em);

			color: $link-color;
			text-decoration: none;

			&:before {
				color: $link-color;
				opacity: 1;
				left: 0;
			}

			svg * {
				fill: $link-color;
			}

		}

	}

	svg {

		@include size(1em);

		vertical-align: -0.05em;

		* {
			transition: fill 0.2s;
			fill: $nav-color;
		}

	}

	small {
		margin-left: 0.4em;
	}

	// Level 1+
	ul {

		margin: 0;

		li {
			border-top: 1px solid $nav-line-color;
			border-bottom: none;
		}

	}

	$selector: &;
	@for $i from 1 through 5 {
		$selector: selector-nest($selector, "ul");
		@at-root #{selector-nest($selector, "a")} {
			margin-left: $i*1.2em;
		}
	}

}

nav ul {
	@extend %nav-list;
	@include font-extend(secondary);
}

/*
 * Preformated text, code
 */
code, kbd {
	font-family: Consolas;
}

pre {

	@extend code;
	@include common-text;

	font-size: rem(14);
	line-height: 1.8em;
	overflow: auto;

}

/*
 * Table
 */
table {

	@include common-block;

	border-collapse: collapse;
	font-size: rem(14);

	caption {

		@extend %caption;
		@include font-extend(secondary);

		caption-side: bottom;
		margin-top: 1em;

	}

}

th, td {
	border: 1px solid $table-border-color;
	padding: 0.4em 1em;
}

th {
	background: $table-header-background;
	font-weight: bold;
	color: $table-header-color;
	text-align: left;
}

td {

	tr.highlight & {
		background: $table-highlight-background;
	}

}

/*
 * Form elements
 */
#{$all-text-inputs} {

	@include font(primary, rem(15) 2em);

	box-sizing: border-box;
	box-shadow: none;
	border: 1px solid;
	border-color: $input-border-color;
	background: $input-background;
	color: $input-text-color;
	margin: 0;
	padding: 0.4em 0.8em;
	width: rem(320);
	max-width: 100%;
	min-height: calc(#{2em + 0.4em*2} + 2px); // IE fix
	vertical-align: middle;

	&.width-full {
		width: 100%;
	}

	@include placeholder {
		color: $input-placeholder-color;
		text-transform: lowercase;
	}

	@include in-columns {
		&:only-child {
			@include width-full;
		}
	}

}

textarea {
	width: rem(480);
	height: rem(160);
}

select {
	min-height: auto;
}

#{$all-buttons} {

	@include hover-slide;
	@include font(secondary, rem(16) 2.75em);

	transition: background 0.2s, color 0.2s;
	border: none;
	background: $button-background;
	color: $button-color;
	cursor: pointer;
	margin: 0 0.5em;
	display: inline-block;
	position: relative;
	padding: 0 1.375em;
	vertical-align: middle;

	&:only-child {
		margin: 0;
	}

	&:hover {
		text-decoration: none;
	}

	// States
	&:disabled, &.disabled {
		background: $button-disabled-background;
		color: $button-disabled-color;
		cursor: default;
	}
	&.success {
		background: $button-success-background;
	}
	&.error {
		background: $button-error-background;
	}

	// Full width
	&.width-full {
		@include margin(null 0);
	}

	// Spinner
	&[type="submit"], &.spinner {

		> span {
			transition: transform 0.2s, opacity 0.2s;
		}

		.spinner {

			@include position(absolute, 0);

			transition: opacity 0.2s;
			opacity: 0;
			display: block;
			margin: 5% 0;
			height: auto;

			.sk-rect {
				background: $button-disabled-color;
			}

		}

		&:disabled, &.disabled {

			> span {
				opacity: 0;
			}

			.spinner {
				opacity: 1;
			}

		}

	}

	&::-moz-focus-inner {
		border: none;
		padding: 0;
	}

}